name: Setup GitHub Runner

on:
  workflow_dispatch: # Trigger manually via GitHub Actions interface

env:
  JOB_NAME: "tewheke-runner"
  RESOURCE_GROUP: "rg-shared-tewheke-dev-aue"
  ENVIRONMENT: "cae-tewheke-dev-aue"
  CONTAINER_REGISTRY_NAME: "acrtewhekedevaue"
  CONTAINER_IMAGE_NAME: "actions-runner:latest"
  REPO_OWNER: "MitchAbelDevOps"
  GITHUB_APP_KEY: ${{ secrets.SELF_HOSTED_RUNNER_APP_PRIVATE_KEY }}
  APP_ID: ${{ vars.SELF_HOSTED_RUNNER_APP_ID }}
  INSTALLATION_ID: ${{ vars.SELF_HOSTED_RUNNER_INSTALLATION_ID }}

jobs:
  deploy-runner-image:
    runs-on: ubuntu-latest
    environment:
      name: dev

    permissions:
      id-token: write # Required for OIDC authentication
      contents: read # To access repository files if needed

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name $CONTAINER_REGISTRY_NAME

      - name: Build and push Docker image using Azure Container Registry (ACR)
        run: |
          az acr build -r $CONTAINER_REGISTRY_NAME -g $RESOURCE_GROUP -f GitHubRunner/RunnerImage/Dockerfile -t $CONTAINER_REGISTRY_NAME.azurecr.io/$CONTAINER_IMAGE_NAME GitHubRunner/RunnerImage

  create-containerapp-job:
    runs-on: ubuntu-latest
    needs: deploy-runner-image
    environment:
      name: dev

    permissions:
      id-token: write # Required for OIDC authentication
      contents: read # To access repository files if needed

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Find ACR User Assigned Identity ID
        env:
          REGION_SUFFIX: ${{ env.REGION_SUFFIX }}
          ENVIRONMENT_SUFFIX: ${{ env.ENVIRONMENT_SUFFIX }}
        run: |
          UAI_NAME="acr-${REGION_SUFFIX}-${ENVIRONMENT_SUFFIX}"
          echo "Looking for User Assigned Identity: $UAI_NAME"

          # Fetch the UAI ID
          UAI_ID=$(az identity list --query "[?name=='${UAI_NAME}'].id" -o tsv)

          if [ -z "$UAI_ID" ]; then
            echo "No User Assigned Identity found with name $UAI_NAME"
            exit 1
          fi

          echo "User Assigned Identity ID: $UAI_ID"
          echo "UAI_ID=$UAI_ID" >> $GITHUB_ENV

      - name: Create Azure Container App Job
        run: |
          az containerapp job create -n "$JOB_NAME" \
            -g "$RESOURCE_GROUP" \
            --environment "$ENVIRONMENT" \
            --trigger-type Event \
            --replica-timeout 1800 \
            --replica-retry-limit 0 \
            --replica-completion-count 1 \
            --parallelism 1 \
            --image "$CONTAINER_REGISTRY_NAME.azurecr.io/$CONTAINER_IMAGE_NAME" \
            --min-executions 0 \
            --max-executions 10 \
            --polling-interval 30 \
            --scale-rule-name "github-runner" \
            --scale-rule-type "github-runner" \
            --scale-rule-metadata "githubAPIURL=https://api.github.com" \
            "owner=$REPO_OWNER" "runnerScope=org" "repos=DevOps,Connectivity,IntegrationShared" "targetWorkflowQueueLength=1" "applicationID=$APP_ID" "installationID=$INSTALLATION_ID"\
            --scale-rule-auth "appKey=app-key" \
            --cpu "2.0" \
            --memory "4Gi" \
            --secrets "app-key=$GITHUB_APP_KEY" \
            --env-vars "GITHUB_APP_ID=$APP_ID" "GITHUB_APP_KEY=secretref:app-key" "ORG_NAME=$REPO_OWNER" "GH_URL=https://github.com/$REPO_OWNER" "REGISTRATION_TOKEN_API_URL=https://api.github.com/repos/$REPO_OWNER/actions/runners/registration-token" \
            --registry-server "$CONTAINER_REGISTRY_NAME.azurecr.io" \
            --registry-identity "$UAI_ID"
            --mi-user-assigned "$UAI_ID"
